CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(BinPkgs)

IF(WIN32)
    SET(MAKE nmake)
ELSE()
    SET(MAKE make)
ENDIF()

SET(ARCHIVE_DIR ${CMAKE_SOURCE_DIR}/archive CACHE PATH "Archive directory")

MACRO(GET_CACHED_URL URL CACHED_URL)
    STRING(REGEX MATCH "[^/]*$" FNAME "${URL}")
    IF(EXISTS ${ARCHIVE_DIR}/${FNAME})
        SET(${CACHED_URL} ${ARCHIVE_DIR}/${FNAME})
    ELSE()
        SET(${CACHED_URL} ${URL})
    ENDIF()
ENDMACRO()


#Debug/Release
SET(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build.")
SET(CMAKE_INSTALL_PREFIX "${CMAKE_SOURCE_DIR}/${CMAKE_BUILD_TYPE}" CACHE PATH "Install directory")

SET(NUMBER_OF_PARALLEL_BUILD "1" CACHE STRING "Number of parallel build for non-make based subprojects")

IF(CMAKE_BUILD_TYPE MATCHES "Release")
    SET(IS_DEBUG FALSE)
ELSE()
    SET(IS_DEBUG TRUE)
ENDIF()

ADD_SUBDIRECTORY(jpeg)
ADD_SUBDIRECTORY(zlib)
ADD_SUBDIRECTORY(tiff)
ADD_SUBDIRECTORY(png)

IF(NOT APPLE)
    ADD_SUBDIRECTORY(libiconv)
ENDIF()

ADD_SUBDIRECTORY(libxml)
ADD_SUBDIRECTORY(expat)
ADD_SUBDIRECTORY(python)
ADD_SUBDIRECTORY(boost)
ADD_SUBDIRECTORY(freetype)

IF(NOT APPLE)
    ADD_SUBDIRECTORY(icu4c)
    ADD_SUBDIRECTORY(curl)
    ADD_SUBDIRECTORY(numpy)
ENDIF()

ADD_SUBDIRECTORY(qt)
ADD_SUBDIRECTORY(vtk)
ADD_SUBDIRECTORY(vxl)
ADD_SUBDIRECTORY(gdcm)
ADD_SUBDIRECTORY(itk)
ADD_SUBDIRECTORY(camp)
ADD_SUBDIRECTORY(hdf5)
ADD_SUBDIRECTORY(cppunit)
ADD_SUBDIRECTORY(ann)
ADD_SUBDIRECTORY(dcmtk)

IF(NOT APPLE)
    ADD_SUBDIRECTORY(wxWidgets)
ENDIF() 

ADD_SUBDIRECTORY(cryptopp)
ADD_SUBDIRECTORY(tetgen)
ADD_SUBDIRECTORY(json-spirit)

